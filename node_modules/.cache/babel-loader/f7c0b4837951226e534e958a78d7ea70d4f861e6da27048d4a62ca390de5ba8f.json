{"ast":null,"code":"var _jsxFileName = \"T:\\\\Node JS\\\\BirdVision\\\\Projects\\\\warranty-dashboard3\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, TextField, Button, Typography, Box, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    // ðŸ”’ Hardcoded credentials\n    const validUsername = \"brand@birdvision.com\";\n    const validPassword = \"secure123\";\n    if (username === validUsername && password === validPassword) {\n      // âœ… Mock JWT token\n      const mockToken = \"mock_jwt_token_12345\";\n      localStorage.setItem(\"token\", mockToken);\n      navigate(\"/dashboard\");\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Warranty Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          variant: \"outlined\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Container","TextField","Button","Typography","Box","Paper","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleLogin","validUsername","validPassword","mockToken","localStorage","setItem","alert","maxWidth","sx","mt","children","elevation","p","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","fullWidth","type","onClick","_c","$RefreshReg$"],"sources":["T:/Node JS/BirdVision/Projects/warranty-dashboard3/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n} from \"@mui/material\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    // ðŸ”’ Hardcoded credentials\r\n    const validUsername = \"brand@birdvision.com\";\r\n    const validPassword = \"secure123\";\r\n\r\n    if (username === validUsername && password === validPassword) {\r\n      // âœ… Mock JWT token\r\n      const mockToken = \"mock_jwt_token_12345\";\r\n      localStorage.setItem(\"token\", mockToken);\r\n      navigate(\"/dashboard\");\r\n    } else {\r\n      alert(\"Invalid credentials\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n            Warranty Login\r\n        </Typography>\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          <TextField\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            fullWidth\r\n          />\r\n          <Button variant=\"contained\" onClick={handleLogin}>\r\n            Login\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}